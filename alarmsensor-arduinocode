#include <ESP8266WiFi.h>
//defines pin numbers
#define trigPin  D2
#define echoPin  D1
#define ledPin1 D0 
#define ledPin2  D4 
#define buzzerPin  D6 

long duration; 
int distance; 

char deviceId[]= "vB887ED7FD41D48D";
char SSID[] = "LENN";
char SSID_Password[] ="Ursula210226" ;
char logServer[]="api.pushingbox.com";

void setup() {
  // put your setup code here, to run once:
 // trigPin = A0;


  
  
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(D6, OUTPUT); 
  pinMode(ledPin1 , OUTPUT) ;
  pinMode(ledPin2 , OUTPUT) ;
  Serial.begin(115200); // Starts the serial communication
}

void loop() {
  // put your main code here, to run repeatedly:
  // Clears the trigPin7
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // Calculating the distance
  distance= duration*0.034/2;

  if(distance < 1000) {

    digitalWrite(ledPin1,HIGH);
    digitalWrite(ledPin2,HIGH);
        digitalWrite(D6,HIGH);
        sendnotif("test");

  }

  else if(distance<4000                                                                                                                                                                                                ) {

        digitalWrite(ledPin1,HIGH);
    digitalWrite(ledPin2,HIGH);
    digitalWrite(D6,LOW);

  }
  else {

       digitalWrite(ledPin1,LOW);
    digitalWrite(ledPin2,LOW);
    digitalWrite(D6,LOW);
    
  }
//  digitalWrite(D6,HIGH);
    // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
}


void sendnotif(String message) {
    WiFi.begin(SSID,SSID_Password);

    while(WiFi.status() !=WL_CONNECTED){
      delay(500);
      Serial.print(".");
    }

    WiFiClient client;

    if (client.connect(logServer , 80)) {
      
      String postStr = "devid=";
      postStr += String(deviceId);
      postStr += "&message_parameter=";
      postStr += String(message);
      postStr += "\r\n\r\n";
      
      Serial.println("- sending data...");
      
      client.print("POST /pushingbox HTTP/1.1\n");
      client.print("Host: api.pushingbox.com\n");
      client.print("Connection: close\n");
      client.print("Content-Type: application/x-www-form-urlencoded\n");
      client.print("Content-Length: ");
      client.print(postStr.length());
      client.print("\n\n");
      client.print(postStr);
      
    }
    client.stop();
}
